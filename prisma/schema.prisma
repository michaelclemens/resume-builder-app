generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Resume {
  id              String      @default(cuid())    @id
  personal        Personal?
  employments     Employment[]
  educations      Education[]
  skills          Skill[]
  strengths       Strength[]
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}

model Personal {
  id              String      @default(cuid())    @id
  resume          Resume      @relation(fields: [resumeId], references: [id])
  resumeId        String      @unique
  position        String
  firstName       String
  lastName        String
  email           String
  phone           String
  city            String
  country         String
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}

model Employment {
  id              String      @default(cuid())    @id
  resume          Resume      @relation(fields: [resumeId], references: [id])
  resumeId        String
  employer        String
  city            String?
  history         EmploymentHistory[]
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}

model EmploymentHistory {
  id              String      @default(cuid())    @id
  employment      Employment  @relation(fields: [employmentId], references: [id])
  employmentId    String
  title           String
  startDate       DateTime    @db.Date            @map(name: "start_date")
  endDate         DateTime?   @db.Date            @map(name: "end_date")
  description     String?
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}

model Education {
  id              String      @default(cuid())    @id
  resume          Resume      @relation(fields: [resumeId], references: [id])
  resumeId        String
  school          String
  degree          String 
  startDate       DateTime    @db.Date            @map(name: "start_date")
  endDate         DateTime?   @db.Date            @map(name: "end_date")
  city            String?
  description     String? 
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}

model Skill {
  id              String      @default(cuid())    @id
  resume          Resume      @relation(fields: [resumeId], references: [id])
  resumeId        String
  name            String
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}

model Strength {
  id              String      @default(cuid())    @id
  resume          Resume      @relation(fields: [resumeId], references: [id])
  resumeId        String
  name            String
  createdAt       DateTime    @default(now())     @map(name: "created_at")
  updatedAt       DateTime    @updatedAt          @map(name: "updated_at")
}